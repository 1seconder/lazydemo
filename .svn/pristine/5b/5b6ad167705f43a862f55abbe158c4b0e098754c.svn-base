package com.newenv.communityFocus.SellControl.services;

import java.util.List;
import java.util.Map;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import org.nutz.dao.entity.Record;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.alibaba.fastjson.JSON;
import com.newenv.communityFocus.SellControl.dao.SellControlDao;
import com.newenv.communityFocus.base.BaseService;
import com.newenv.communityFocus.domain.ConditionSC;
import com.newenv.communityFocus.domain.page.PageInfo;


@Component
//@EnableAutoConfiguration
@Path("/sellControl")
public class SellControlServices  extends BaseService{
	@Autowired
	private SellControlDao sellControlDao;

	@GET
	@Produces("application/json")
	@Consumes("application/json")
	@Path("/querySCLp/{bmid}/{userid}")
	public Response querySCLp(@PathParam("bmid") Integer bmid ,@PathParam("userid") Integer userid){
			List<Record> querySCData = sellControlDao.querySCLp(bmid,userid);
			String jsonString = JSON.toJSONString(querySCData);
			return Response.ok().entity(jsonString).build();
	};

	@GET
	@Produces("application/json")
	@Consumes("application/json")
	@Path("/querySCDong/lp/{lpid}/{userid}")
	public Response querySCDong(@PathParam("lpid") Integer lpid ,@PathParam("userid") Integer userid){
			List<Record> querySCData = sellControlDao.querySCDong(lpid,userid);
			String jsonString = JSON.toJSONString(querySCData);
			return Response.ok().entity(jsonString).build();
	};
	
	@GET
	@Produces("application/json")
	@Consumes("application/json")
	@Path("/querySCDanyuan/dz/{dzid}/{userid}")
	public Response querySCDanyuan(@PathParam("dzid") Integer dzid,@PathParam("userid") Integer userid ){
			List<Record> querySCData = sellControlDao.querySCDanyuan(dzid,userid);
			String jsonString = JSON.toJSONString(querySCData);
			return Response.ok().entity(jsonString).build();
	};
	

	@GET
	@Produces("application/json")
	@Consumes("application/json")
	@Path("/querySCData/{bmid}/{userid}")
	public Response querySCData(@PathParam("bmid") Integer bmid ,@PathParam("userid") Integer userid){
			List<Record> querySCData = sellControlDao.querySCData(bmid,userid);
			String jsonString = JSON.toJSONString(querySCData);
			return Response.ok().entity(jsonString).build();
	};
	

	@POST
	@Produces("application/json;charset=UTF-8")
	@Consumes("application/json;charset=UTF-8")
	@Path("/querySCTable/")
	public Response querySCTable(ConditionSC condition){
		Map<String, Map<String, List<String>>> querySCTable = null;
		String jsonString ="";
		if(null != condition)
		{
			String  lpid = condition.getLpid(); 
			if(null != lpid && lpid !="" && !lpid.equals(""))
			{
				querySCTable = sellControlDao.querySCTable(condition);
			}
		}
		jsonString = JSON.toJSONString(querySCTable);
		return Response.ok().entity(jsonString).build();
	};
	
	
	@POST
	@Produces("application/json;charset=UTF-8")
	@Consumes("application/json;charset=UTF-8")
	@Path("/querySCList/")
	public Response querySCList(ConditionSC condition){
		PageInfo pageInfo = condition.getPageInfo();
		if(pageInfo == null){
			pageInfo = new PageInfo();
			pageInfo.setPage(1);
			pageInfo.setRows(10);
		}
//		List<Record> querySCList = null;
		String jsonString ="";
		if(null != condition)
		{
			String  lpid = condition.getLpid(); 
			if(null != lpid && lpid !="" && !lpid.equals(""))
			{
				pageInfo = sellControlDao.querySCList(pageInfo,condition);
			}
		}
		jsonString = JSON.toJSONString(pageInfo);
		return Response.ok().entity(jsonString).build();
	};
}
